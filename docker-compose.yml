version: '2'
services:
  nginx:
   container_name: www
   image: nginx
   restart: always
   depends_on:
   - hornetq
   - db
   - jetty
   ports:
   - 4443:443
   - 80:80
   volumes:
   - ./config/nginx.conf:/etc/nginx/nginx.conf
   - ./config/sites:/tmp/nginx-config-templates
   - ./entrypoint.sh:/entrypoint.sh
   - ./static/nats/html:/var/www/nats/html
   - ./static/sportsbook/html:/var/www/sportsbook/html
   environment:
   - NGINX_PORT=80
   - NATS_SERVER_NAME=nats.intralot.com
   - NATS_DOCUMENT_ROOT=/var/www/nats/html
   - SB_SERVER_NAME=sportsbook.intralot.com
   - SB_DOCUMENT_ROOT=/var/www/sportsbook/html
   command: ./entrypoint.sh
   networks:
     - front

  hornetq:
    container_name: hornetq
    image: mansante/hornetq
    restart: always
    ports:
      - 5445:5445
      - 5455:5455
    environment:
      - HORNETQ_VERSION=2.4.0.Final
      - HORNETQ_HOME="/opt/hornetq-${HORNETQ_VERSION}"
    volumes:
      - mqdata:/opt/hornetq-2.4.0.Final/config/stand-alone/data
      - ./hornetq/config/hornetq-jms.xml:/opt/hornetq-2.4.0.Final/config/stand-alone/non-clustered/hornetq-jms.xml
    networks:
      - back

  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./postgres/init.d:/docker-entrypoint-initdb.d/
    networks:
      - back

  jetty:
   container_name: app
   build: jetty
   restart: always
   depends_on:
     - hornetq
     - db
   links:
     - db:ats.db
     - db:ats.betcatch.db
     - hornetq:ats.broker
  #  extra_hosts:
  #    - "ats.db:192.168.1.6"
  #    - "ats.betcatch.db:192.168.1.6"
   ports:
     - 8081:8080
   volumes:
     - /home/andy/ilot/intralot-server/deploy/target/dev-dist/lib:/app/ats/lib
     - /home/andy/ilot/ats-server/betcatcher/cashout-server.war/target/ats-sportsbook-cashout-server-0.1.0-vanilla-SNAPSHOT.war:/app/ats/server/webapps/ats-sportsbook-cashout-server-0.1.0-vanilla-SNAPSHOT.war
   networks:
     - front
     - back


networks:
  front:
  back:
volumes:
  dbdata:
  mqdata:
